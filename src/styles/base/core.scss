@use 'sass:map';
@use 'sass:math';
@use 'sass:string';

@function getVw($px, $width) {
  @return $px / $width * 1vw;
}

html {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  @media (min-width: 320px) {
    font-size: getVw($fs, 340px / 100);
  }

  @each $breakpoint in (375px, 576px, 768px, 1024px) {
    @media (min-width: #{$breakpoint}) {
      font-size: getVw($fs, $breakpoint / 100);
    }
  }

  @media (min-width: 1201px) {
    font-size: getVw($fs, 1920px / 100);
  }

  @media (min-width: 1920px) {
    font-size: getVw($fs, 1920px / 100);
  }
}

@function breakpoint($variant: d) {
  @return map.get($breakpoints, $variant);
}

@function media($direction: '>', $variant: d) {
  @if $direction == '>' {
    @return '(min-width: #{breakpoint($variant)})';
  } @else if $direction == '<' {
    @return '(max-width: #{breakpoint($variant) - 1px})';
  } @else if $direction == '<=' {
    @return '(max-width: #{breakpoint($variant)})';
  } @else if $direction == 'mt' {
    @return '(min-width: #{breakpoint(m)}) and (max-width: #{breakpoint(t) - 1px})';
  } @else if $direction == 'td' {
    @return '(min-width: #{breakpoint(t)}) and (max-width: #{breakpoint(d) - 1px})';
  } @else if $direction == 'md' {
    @return '(min-width: #{breakpoint(m)}) and (max-width: #{breakpoint(d) - 1px})';
  }
}

@mixin custom-placeholder {
  &:focus-within {
    span {
      top: $custom-placeholder-top;
      transform: scale($custom-placeholder-scale);
    }
  }

  input:not(:placeholder-shown) ~ .custom-placeholder__service,
  textarea:not(:placeholder-shown) + .custom-placeholder__service {
    span {
      top: $custom-placeholder-top;
      left: $custom-placeholder-left;
      transform: scale($custom-placeholder-scale);
    }

    svg {
      pointer-events: all;
      opacity: 1;
    }
  }
}

$col-width-m: '((100vw - (#{$col-pad-m} * 2) - (#{$col-gap-m} * #{$col-count-m - 1})) / #{$col-count-m})';
$col-width-t: '((100vw - (#{$col-pad-t} * 2) - (#{$col-gap-m} * #{$col-count-t - 1})) / #{$col-count-t})';
$col-width-d: '((100vw - (#{$col-pad-d} * 2) - (#{$col-gap-d} * #{$col-count-d - 1})) / #{$col-count-d})';
$col-part-m: '(#{$col-width-m} + #{$col-gap-m})';
$col-part-t: '(#{$col-width-t} + #{$col-gap-t})';
$col-part-d: '(#{$col-width-d} + #{$col-gap-d})';
